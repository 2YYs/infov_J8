Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import plotly.express as px
import pandas as pd

# Load the CSV file
file_path_employment = 'us_employmentunemployment.csv'
df_employment = pd.read_csv(file_path_employment)

# Filter data for employment rates
employment_data = df_employment[df_employment['Rate'] == 'Employment rate']

# Define colors for each combination of Gender and Place of birth
color_map = {
    ('Men', 'Native-born'): 'lightblue',
    ('Men', 'Foreign-born'): 'darkblue',
    ('Women', 'Native-born'): 'lightpink',
    ('Women', 'Foreign-born'): 'darkred',
    ('Total', 'Native-born'): 'lightgreen',
    ('Total', 'Foreign-born'): 'darkgreen'
}

# Map the combinations to colors in the dataframe
employment_data['Color'] = employment_data.apply(lambda row: color_map[(row['Gender'], row['Place of birth'])], axis=1)

# Create a scatter plot for employment rate by gender and place of birth
fig_scatter = px.scatter(employment_data, x='Year', y='Value', color='Color', symbol='Place of birth',
                         title='Employment Rate in the US by Gender and Place of Birth (2000-2020)',
                         labels={'Value': 'Employment Rate (%)', 'Year': 'Year'},
                         trendline='ols',  # Adding trendline for Ordinary Least Squares (OLS) regression
                         )

fig_scatter.update_layout(
    plot_bgcolor='rgba(255, 255, 0, 0.3)'
)

fig_scatter.show()
------------------

----- stderr -----
/tmp/ipykernel_1897/3344519883.py:22: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[3], line 25[0m
[1;32m     22[0m employment_data[[38;5;124m'[39m[38;5;124mColor[39m[38;5;124m'[39m] [38;5;241m=[39m employment_data[38;5;241m.[39mapply([38;5;28;01mlambda[39;00m row: color_map[(row[[38;5;124m'[39m[38;5;124mGender[39m[38;5;124m'[39m], row[[38;5;124m'[39m[38;5;124mPlace of birth[39m[38;5;124m'[39m])], axis[38;5;241m=[39m[38;5;241m1[39m)
[1;32m     24[0m [38;5;66;03m# Create a scatter plot for employment rate by gender and place of birth[39;00m
[0;32m---> 25[0m fig_scatter [38;5;241m=[39m [43mpx[49m[38;5;241;43m.[39;49m[43mscatter[49m[43m([49m[43memployment_data[49m[43m,[49m[43m [49m[43mx[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mYear[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43my[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mValue[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mcolor[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mColor[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43msymbol[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mPlace of birth[39;49m[38;5;124;43m'[39;49m[43m,[49m
[1;32m     26[0m [43m                         [49m[43mtitle[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mEmployment Rate in the US by Gender and Place of Birth (2000-2020)[39;49m[38;5;124;43m'[39;49m[43m,[49m
[1;32m     27[0m [43m                         [49m[43mlabels[49m[38;5;241;43m=[39;49m[43m{[49m[38;5;124;43m'[39;49m[38;5;124;43mValue[39;49m[38;5;124;43m'[39;49m[43m:[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mEmployment Rate ([39;49m[38;5;124;43m%[39;49m[38;5;124;43m)[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mYear[39;49m[38;5;124;43m'[39;49m[43m:[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mYear[39;49m[38;5;124;43m'[39;49m[43m}[49m[43m,[49m
[1;32m     28[0m [43m                         [49m[43mtrendline[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mols[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m  [49m[38;5;66;43;03m# Adding trendline for Ordinary Least Squares (OLS) regression[39;49;00m
[1;32m     29[0m [43m                         [49m[43m)[49m
[1;32m     31[0m fig_scatter[38;5;241m.[39mupdate_layout(
[1;32m     32[0m     plot_bgcolor[38;5;241m=[39m[38;5;124m'[39m[38;5;124mrgba(255, 255, 0, 0.3)[39m[38;5;124m'[39m
[1;32m     33[0m )
[1;32m     35[0m fig_scatter[38;5;241m.[39mshow()

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/plotly/express/_chart_types.py:66[0m, in [0;36mscatter[0;34m(data_frame, x, y, color, symbol, size, hover_name, hover_data, custom_data, text, facet_row, facet_col, facet_col_wrap, facet_row_spacing, facet_col_spacing, error_x, error_x_minus, error_y, error_y_minus, animation_frame, animation_group, category_orders, labels, orientation, color_discrete_sequence, color_discrete_map, color_continuous_scale, range_color, color_continuous_midpoint, symbol_sequence, symbol_map, opacity, size_max, marginal_x, marginal_y, trendline, trendline_options, trendline_color_override, trendline_scope, log_x, log_y, range_x, range_y, render_mode, title, template, width, height)[0m
[1;32m     12[0m [38;5;28;01mdef[39;00m [38;5;21mscatter[39m(
[1;32m     13[0m     data_frame[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m     14[0m     x[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[0;32m   (...)[0m
[1;32m     60[0m     height[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m     61[0m ) [38;5;241m-[39m[38;5;241m>[39m go[38;5;241m.[39mFigure:
[1;32m     62[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m     63[0m [38;5;124;03m    In a scatter plot, each row of `data_frame` is represented by a symbol[39;00m
[1;32m     64[0m [38;5;124;03m    mark in 2D space.[39;00m
[1;32m     65[0m [38;5;124;03m    """[39;00m
[0;32m---> 66[0m     [38;5;28;01mreturn[39;00m [43mmake_figure[49m[43m([49m[43margs[49m[38;5;241;43m=[39;49m[38;5;28;43mlocals[39;49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43mconstructor[49m[38;5;241;43m=[39;49m[43mgo[49m[38;5;241;43m.[39;49m[43mScatter[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/plotly/express/_core.py:2267[0m, in [0;36mmake_figure[0;34m(args, constructor, trace_patch, layout_patch)[0m
[1;32m   2264[0m     [38;5;28;01melif[39;00m args[[38;5;124m"[39m[38;5;124mecdfnorm[39m[38;5;124m"[39m] [38;5;241m==[39m [38;5;124m"[39m[38;5;124mpercent[39m[38;5;124m"[39m:
[1;32m   2265[0m         group[var] [38;5;241m=[39m [38;5;241m100.0[39m [38;5;241m*[39m group[var] [38;5;241m/[39m group_sum
[0;32m-> 2267[0m patch, fit_results [38;5;241m=[39m [43mmake_trace_kwargs[49m[43m([49m
[1;32m   2268[0m [43m    [49m[43margs[49m[43m,[49m[43m [49m[43mtrace_spec[49m[43m,[49m[43m [49m[43mgroup[49m[43m,[49m[43m [49m[43mmapping_labels[49m[38;5;241;43m.[39;49m[43mcopy[49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43msizeref[49m
[1;32m   2269[0m [43m[49m[43m)[49m
[1;32m   2270[0m trace[38;5;241m.[39mupdate(patch)
[1;32m   2271[0m [38;5;28;01mif[39;00m fit_results [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/plotly/express/_core.py:361[0m, in [0;36mmake_trace_kwargs[0;34m(args, trace_spec, trace_data, mapping_labels, sizeref)[0m
[1;32m    359[0m trace_patch[[38;5;124m"[39m[38;5;124mx[39m[38;5;124m"[39m] [38;5;241m=[39m sorted_trace_data[args[[38;5;124m"[39m[38;5;124mx[39m[38;5;124m"[39m]][non_missing]
[1;32m    360[0m trendline_function [38;5;241m=[39m trendline_functions[attr_value]
[0;32m--> 361[0m y_out, hover_header, fit_results [38;5;241m=[39m [43mtrendline_function[49m[43m([49m
[1;32m    362[0m [43m    [49m[43margs[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mtrendline_options[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m    363[0m [43m    [49m[43msorted_trace_data[49m[43m[[49m[43margs[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mx[39;49m[38;5;124;43m"[39;49m[43m][49m[43m][49m[43m,[49m
[1;32m    364[0m [43m    [49m[43mx[49m[43m,[49m
[1;32m    365[0m [43m    [49m[43my[49m[43m,[49m
[1;32m    366[0m [43m    [49m[43margs[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mx[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m    367[0m [43m    [49m[43margs[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43my[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m    368[0m [43m    [49m[43mnon_missing[49m[43m,[49m
[1;32m    369[0m [43m[49m[43m)[49m
[1;32m    370[0m [38;5;28;01massert[39;00m [38;5;28mlen[39m(y_out) [38;5;241m==[39m [38;5;28mlen[39m(
[1;32m    371[0m     trace_patch[[38;5;124m"[39m[38;5;124mx[39m[38;5;124m"[39m]
[1;32m    372[0m ), [38;5;124m"[39m[38;5;124mmissing-data-handling failure in trendline code[39m[38;5;124m"[39m
[1;32m    373[0m trace_patch[[38;5;124m"[39m[38;5;124my[39m[38;5;124m"[39m] [38;5;241m=[39m y_out

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/plotly/express/trendline_functions/__init__.py:43[0m, in [0;36mols[0;34m(trendline_options, x_raw, x, y, x_label, y_label, non_missing)[0m
[1;32m     37[0m     [38;5;28;01mif[39;00m k [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m valid_options:
[1;32m     38[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m     39[0m             [38;5;124m"[39m[38;5;124mOLS trendline_options keys must be one of [[39m[38;5;132;01m%s[39;00m[38;5;124m] but got [39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m"[39m
[1;32m     40[0m             [38;5;241m%[39m ([38;5;124m"[39m[38;5;124m, [39m[38;5;124m"[39m[38;5;241m.[39mjoin(valid_options), k)
[1;32m     41[0m         )
[0;32m---> 43[0m [38;5;28;01mimport[39;00m [38;5;21;01mstatsmodels[39;00m[38;5;21;01m.[39;00m[38;5;21;01mapi[39;00m [38;5;28;01mas[39;00m [38;5;21;01msm[39;00m
[1;32m     45[0m add_constant [38;5;241m=[39m trendline_options[38;5;241m.[39mget([38;5;124m"[39m[38;5;124madd_constant[39m[38;5;124m"[39m, [38;5;28;01mTrue[39;00m)
[1;32m     46[0m log_x [38;5;241m=[39m trendline_options[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mlog_x[39m[38;5;124m"[39m, [38;5;28;01mFalse[39;00m)

[0;31mModuleNotFoundError[0m: No module named 'statsmodels'

